// Code generated by genpjrpc. DO NOT EDIT.
//  genpjrpc version: v0.4.0

package rpcclient

import (
	"context"
	"fmt"

	"github.com/google/uuid"
	"gitlab.com/pjrpc/pjrpc/v2/client"

	"github.com/tranHieuDev23/cato/internal/handlers/http/rpc"
)

// List of the client JSON-RPC methods.
const (
	JSONRPCMethodEcho_Client = "echo"
)

// APIClient is an API client for API service.
type APIClient interface {
	Echo(ctx context.Context, in *rpc.EchoRequest, mods ...client.Mod) (*rpc.EchoResponse, error)
}

type implAPIClient struct {
	cl client.Invoker
}

// NewAPIClient returns new client implementation of the API service.
func NewAPIClient(cl client.Invoker) APIClient {
	return &implAPIClient{cl: cl}
}

func (c *implAPIClient) Echo(ctx context.Context, in *rpc.EchoRequest, mods ...client.Mod) (result *rpc.EchoResponse, err error) {
	gen, err := uuid.NewUUID()
	if err != nil {
		return result, fmt.Errorf("failed to create uuid generator: %w", err)
	}

	result = new(rpc.EchoResponse)

	err = c.cl.Invoke(ctx, gen.String(), JSONRPCMethodEcho_Client, in, result, mods...)
	if err != nil {
		return result, fmt.Errorf("failed to Invoke method %q: %w", JSONRPCMethodEcho_Client, err)
	}

	return result, nil
}
