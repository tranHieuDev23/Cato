/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RpcCreateUserRequestRole } from './RpcCreateUserRequestRole';
import {
    RpcCreateUserRequestRoleFromJSON,
    RpcCreateUserRequestRoleFromJSONTyped,
    RpcCreateUserRequestRoleToJSON,
} from './RpcCreateUserRequestRole';

/**
 * 
 * @export
 * @interface RpcCreateUserRequest
 */
export interface RpcCreateUserRequest {
    /**
     * 
     * @type {string}
     * @memberof RpcCreateUserRequest
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof RpcCreateUserRequest
     */
    displayName: string;
    /**
     * 
     * @type {RpcCreateUserRequestRole}
     * @memberof RpcCreateUserRequest
     */
    role: RpcCreateUserRequestRole;
    /**
     * 
     * @type {string}
     * @memberof RpcCreateUserRequest
     */
    password: string;
}

/**
 * Check if a given object implements the RpcCreateUserRequest interface.
 */
export function instanceOfRpcCreateUserRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "password" in value;

    return isInstance;
}

export function RpcCreateUserRequestFromJSON(json: any): RpcCreateUserRequest {
    return RpcCreateUserRequestFromJSONTyped(json, false);
}

export function RpcCreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcCreateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': json['Username'],
        'displayName': json['DisplayName'],
        'role': RpcCreateUserRequestRoleFromJSON(json['Role']),
        'password': json['Password'],
    };
}

export function RpcCreateUserRequestToJSON(value?: RpcCreateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Username': value.username,
        'DisplayName': value.displayName,
        'Role': RpcCreateUserRequestRoleToJSON(value.role),
        'Password': value.password,
    };
}

