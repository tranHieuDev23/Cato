/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RpcGetAccountProblemSubmissionSnippetListRequest
 */
export interface RpcGetAccountProblemSubmissionSnippetListRequest {
    /**
     * 
     * @type {number}
     * @memberof RpcGetAccountProblemSubmissionSnippetListRequest
     */
    accountID: number;
    /**
     * 
     * @type {string}
     * @memberof RpcGetAccountProblemSubmissionSnippetListRequest
     */
    problemUUID: string;
    /**
     * 
     * @type {number}
     * @memberof RpcGetAccountProblemSubmissionSnippetListRequest
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof RpcGetAccountProblemSubmissionSnippetListRequest
     */
    limit: number;
}

/**
 * Check if a given object implements the RpcGetAccountProblemSubmissionSnippetListRequest interface.
 */
export function instanceOfRpcGetAccountProblemSubmissionSnippetListRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountID" in value;
    isInstance = isInstance && "problemUUID" in value;
    isInstance = isInstance && "offset" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function RpcGetAccountProblemSubmissionSnippetListRequestFromJSON(json: any): RpcGetAccountProblemSubmissionSnippetListRequest {
    return RpcGetAccountProblemSubmissionSnippetListRequestFromJSONTyped(json, false);
}

export function RpcGetAccountProblemSubmissionSnippetListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcGetAccountProblemSubmissionSnippetListRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountID': json['AccountID'],
        'problemUUID': json['ProblemUUID'],
        'offset': json['Offset'],
        'limit': json['Limit'],
    };
}

export function RpcGetAccountProblemSubmissionSnippetListRequestToJSON(value?: RpcGetAccountProblemSubmissionSnippetListRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AccountID': value.accountID,
        'ProblemUUID': value.problemUUID,
        'Offset': value.offset,
        'Limit': value.limit,
    };
}

