/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RpcGetUserProblemSnippetListRequest
 */
export interface RpcGetUserProblemSnippetListRequest {
    /**
     * 
     * @type {number}
     * @memberof RpcGetUserProblemSnippetListRequest
     */
    userID: number;
    /**
     * 
     * @type {number}
     * @memberof RpcGetUserProblemSnippetListRequest
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof RpcGetUserProblemSnippetListRequest
     */
    limit: number;
}

/**
 * Check if a given object implements the RpcGetUserProblemSnippetListRequest interface.
 */
export function instanceOfRpcGetUserProblemSnippetListRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userID" in value;
    isInstance = isInstance && "offset" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function RpcGetUserProblemSnippetListRequestFromJSON(json: any): RpcGetUserProblemSnippetListRequest {
    return RpcGetUserProblemSnippetListRequestFromJSONTyped(json, false);
}

export function RpcGetUserProblemSnippetListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcGetUserProblemSnippetListRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userID': json['UserID'],
        'offset': json['Offset'],
        'limit': json['Limit'],
    };
}

export function RpcGetUserProblemSnippetListRequestToJSON(value?: RpcGetUserProblemSnippetListRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'UserID': value.userID,
        'Offset': value.offset,
        'Limit': value.limit,
    };
}

