/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RpcCreateUserRequestRole } from './RpcCreateUserRequestRole';
import {
    RpcCreateUserRequestRoleFromJSON,
    RpcCreateUserRequestRoleFromJSONTyped,
    RpcCreateUserRequestRoleToJSON,
} from './RpcCreateUserRequestRole';

/**
 * 
 * @export
 * @interface RpcUser
 */
export interface RpcUser {
    /**
     * 
     * @type {number}
     * @memberof RpcUser
     */
    iD: number;
    /**
     * 
     * @type {string}
     * @memberof RpcUser
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof RpcUser
     */
    displayName: string;
    /**
     * 
     * @type {RpcCreateUserRequestRole}
     * @memberof RpcUser
     */
    role: RpcCreateUserRequestRole;
}

/**
 * Check if a given object implements the RpcUser interface.
 */
export function instanceOfRpcUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "iD" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "role" in value;

    return isInstance;
}

export function RpcUserFromJSON(json: any): RpcUser {
    return RpcUserFromJSONTyped(json, false);
}

export function RpcUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iD': json['ID'],
        'username': json['Username'],
        'displayName': json['DisplayName'],
        'role': RpcCreateUserRequestRoleFromJSON(json['Role']),
    };
}

export function RpcUserToJSON(value?: RpcUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ID': value.iD,
        'Username': value.username,
        'DisplayName': value.displayName,
        'Role': RpcCreateUserRequestRoleToJSON(value.role),
    };
}

