/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RpcGetProblemSnippetListRequest
 */
export interface RpcGetProblemSnippetListRequest {
    /**
     * 
     * @type {number}
     * @memberof RpcGetProblemSnippetListRequest
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof RpcGetProblemSnippetListRequest
     */
    limit: number;
}

/**
 * Check if a given object implements the RpcGetProblemSnippetListRequest interface.
 */
export function instanceOfRpcGetProblemSnippetListRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "offset" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function RpcGetProblemSnippetListRequestFromJSON(json: any): RpcGetProblemSnippetListRequest {
    return RpcGetProblemSnippetListRequestFromJSONTyped(json, false);
}

export function RpcGetProblemSnippetListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcGetProblemSnippetListRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'offset': json['Offset'],
        'limit': json['Limit'],
    };
}

export function RpcGetProblemSnippetListRequestToJSON(value?: RpcGetProblemSnippetListRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Offset': value.offset,
        'Limit': value.limit,
    };
}

