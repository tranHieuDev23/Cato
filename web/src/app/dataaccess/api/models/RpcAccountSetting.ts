/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RpcAccountSetting
 */
export interface RpcAccountSetting {
    /**
     * 
     * @type {boolean}
     * @memberof RpcAccountSetting
     */
    disableAccountCreation: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RpcAccountSetting
     */
    disableAccountUpdate: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RpcAccountSetting
     */
    disableSessionCreationForContestant: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RpcAccountSetting
     */
    disableSessionCreationForProblemSetter: boolean;
}

/**
 * Check if a given object implements the RpcAccountSetting interface.
 */
export function instanceOfRpcAccountSetting(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "disableAccountCreation" in value;
    isInstance = isInstance && "disableAccountUpdate" in value;
    isInstance = isInstance && "disableSessionCreationForContestant" in value;
    isInstance = isInstance && "disableSessionCreationForProblemSetter" in value;

    return isInstance;
}

export function RpcAccountSettingFromJSON(json: any): RpcAccountSetting {
    return RpcAccountSettingFromJSONTyped(json, false);
}

export function RpcAccountSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcAccountSetting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'disableAccountCreation': json['DisableAccountCreation'],
        'disableAccountUpdate': json['DisableAccountUpdate'],
        'disableSessionCreationForContestant': json['DisableSessionCreationForContestant'],
        'disableSessionCreationForProblemSetter': json['DisableSessionCreationForProblemSetter'],
    };
}

export function RpcAccountSettingToJSON(value?: RpcAccountSetting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'DisableAccountCreation': value.disableAccountCreation,
        'DisableAccountUpdate': value.disableAccountUpdate,
        'DisableSessionCreationForContestant': value.disableSessionCreationForContestant,
        'DisableSessionCreationForProblemSetter': value.disableSessionCreationForProblemSetter,
    };
}

