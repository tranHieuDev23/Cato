/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestBodyOfTheGetServerInfoMethod
 */
export interface RequestBodyOfTheGetServerInfoMethod {
    /**
     * A String specifying the version of the JSON-RPC protocol. MUST be exactly "2.0".
     * @type {string}
     * @memberof RequestBodyOfTheGetServerInfoMethod
     */
    jsonrpc?: RequestBodyOfTheGetServerInfoMethodJsonrpcEnum;
    /**
     * An identifier established by the Client.
     * @type {string}
     * @memberof RequestBodyOfTheGetServerInfoMethod
     */
    id?: string;
    /**
     * A String containing the name of the method to be invoked.
     * @type {string}
     * @memberof RequestBodyOfTheGetServerInfoMethod
     */
    method?: RequestBodyOfTheGetServerInfoMethodMethodEnum;
    /**
     * 
     * @type {object}
     * @memberof RequestBodyOfTheGetServerInfoMethod
     */
    params?: object;
}


/**
 * @export
 */
export const RequestBodyOfTheGetServerInfoMethodJsonrpcEnum = {
    _20: '2.0'
} as const;
export type RequestBodyOfTheGetServerInfoMethodJsonrpcEnum = typeof RequestBodyOfTheGetServerInfoMethodJsonrpcEnum[keyof typeof RequestBodyOfTheGetServerInfoMethodJsonrpcEnum];

/**
 * @export
 */
export const RequestBodyOfTheGetServerInfoMethodMethodEnum = {
    GetServerInfo: 'get_server_info'
} as const;
export type RequestBodyOfTheGetServerInfoMethodMethodEnum = typeof RequestBodyOfTheGetServerInfoMethodMethodEnum[keyof typeof RequestBodyOfTheGetServerInfoMethodMethodEnum];


/**
 * Check if a given object implements the RequestBodyOfTheGetServerInfoMethod interface.
 */
export function instanceOfRequestBodyOfTheGetServerInfoMethod(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RequestBodyOfTheGetServerInfoMethodFromJSON(json: any): RequestBodyOfTheGetServerInfoMethod {
    return RequestBodyOfTheGetServerInfoMethodFromJSONTyped(json, false);
}

export function RequestBodyOfTheGetServerInfoMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestBodyOfTheGetServerInfoMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jsonrpc': !exists(json, 'jsonrpc') ? undefined : json['jsonrpc'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'params': !exists(json, 'params') ? undefined : json['params'],
    };
}

export function RequestBodyOfTheGetServerInfoMethodToJSON(value?: RequestBodyOfTheGetServerInfoMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jsonrpc': value.jsonrpc,
        'id': value.id,
        'method': value.method,
        'params': value.params,
    };
}

