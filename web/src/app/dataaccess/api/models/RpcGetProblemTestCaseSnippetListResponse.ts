/* tslint:disable */
/* eslint-disable */
/**
 * API
 * Generated by genpjrpc: v0.4.0
 *
 * The version of the OpenAPI document: v0.0.0-unknown
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RpcTestCaseSnippet } from './RpcTestCaseSnippet';
import {
    RpcTestCaseSnippetFromJSON,
    RpcTestCaseSnippetFromJSONTyped,
    RpcTestCaseSnippetToJSON,
} from './RpcTestCaseSnippet';

/**
 * 
 * @export
 * @interface RpcGetProblemTestCaseSnippetListResponse
 */
export interface RpcGetProblemTestCaseSnippetListResponse {
    /**
     * 
     * @type {number}
     * @memberof RpcGetProblemTestCaseSnippetListResponse
     */
    totalTestCaseCount: number;
    /**
     * 
     * @type {Array<RpcTestCaseSnippet>}
     * @memberof RpcGetProblemTestCaseSnippetListResponse
     */
    testCaseSnippetList: Array<RpcTestCaseSnippet>;
}

/**
 * Check if a given object implements the RpcGetProblemTestCaseSnippetListResponse interface.
 */
export function instanceOfRpcGetProblemTestCaseSnippetListResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalTestCaseCount" in value;
    isInstance = isInstance && "testCaseSnippetList" in value;

    return isInstance;
}

export function RpcGetProblemTestCaseSnippetListResponseFromJSON(json: any): RpcGetProblemTestCaseSnippetListResponse {
    return RpcGetProblemTestCaseSnippetListResponseFromJSONTyped(json, false);
}

export function RpcGetProblemTestCaseSnippetListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcGetProblemTestCaseSnippetListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalTestCaseCount': json['TotalTestCaseCount'],
        'testCaseSnippetList': ((json['TestCaseSnippetList'] as Array<any>).map(RpcTestCaseSnippetFromJSON)),
    };
}

export function RpcGetProblemTestCaseSnippetListResponseToJSON(value?: RpcGetProblemTestCaseSnippetListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'TotalTestCaseCount': value.totalTestCaseCount,
        'TestCaseSnippetList': ((value.testCaseSnippetList as Array<any>).map(RpcTestCaseSnippetToJSON)),
    };
}

